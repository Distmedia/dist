---
import { ViewTransitions } from "astro:transitions";
import Backdrop from "../components/Backdrop.astro";
import { faviconUrl, thumbnailUrl, meta_description, meta_keywords } from "../assets/site.json";

interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en" class="theme">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="content-language" content="sv">
    <meta name="viewport" content="width=device-width, initial-scale=1" />

    <meta name="generator" content={Astro.generator} />
    <meta name="keywords" content={meta_keywords}>
    <meta name="description" content={meta_description}>

    <meta property="og:title" content={title}>
    <meta property="og:description" content={meta_description}>
    <meta property="og:image" content={thumbnailUrl}>

    <meta name="twitter:title" content={title}>
    <meta name="twitter:description" content={meta_description}>
    <meta name="twitter:image" content={thumbnailUrl}>
    <meta name="twitter:card" content="summary_large_image">

    <link rel="icon" type="image/svg+xml" href={faviconUrl} />
    <link
      rel="preload"
      crossorigin="anonymous"
      as="font"
      href="/fonts/KarlST_Bold.woff2"
      type="font/woff2"
    />
    <title>{title}</title>
    <ViewTransitions />
  </head>
  <!-- <body class="font-karlst text-base-red">  -->
  <body class="font-karlst text-[#257F3D]"> 
    <Backdrop />
    <div class="apply-filters">
      <slot />
    </div>
    <style is:global>
      @tailwind utilities;

      @font-face {
        font-family: "KarlST";
        src: url("/fonts/KarlST_Bold.woff2") format("woff2");
        font-weight: bold;
        font-style: normal;
        font-display: swap;
      }

      @layer utilities {
        .apply-red-filter {
          @apply hue-rotate-[0deg] saturate-[0.85] brightness-[1.3];
        }

        .apply-blue-filter {
          @apply hue-rotate-[177deg] saturate-[0.98] brightness-[2.9];
        }

        .apply-green-filter {
          @apply hue-rotate-[124deg] saturate-[0.4] brightness-[1.2];
        }

        .apply-purple-filter {
          @apply hue-rotate-[291deg] saturate-[0.2] brightness-[2];
        }

        .revert-red-filter {
          @apply hue-rotate-[0deg] saturate-[1.18] brightness-[0.77];
        }

        .revert-blue-filter {
          @apply hue-rotate-[-177deg] saturate-[1.02] brightness-[0.34];
        }

        .revert-green-filter {
          @apply hue-rotate-[-124deg] saturate-[2.5] brightness-[0.83];
        }

        .revert-purple-filter {
          @apply hue-rotate-[-291deg] saturate-[5] brightness-[0.5];
        }
      }

      .apply-filters {
        @apply theme-red:apply-red-filter theme-blue:apply-blue-filter theme-green:apply-green-filter theme-purple:apply-purple-filter;
      }

      .revert-filters {
        @apply theme-red:revert-red-filter theme-blue:revert-blue-filter theme-green:revert-green-filter theme-purple:revert-purple-filter;
      }

      body {
        @apply selection:bg-base-red/20
      }

      h1, h2, h3, h4, h5, h6 {
        @apply text-lg pt-4 break-words;
      }

      a {
        @apply text-3xl hover:blur-xs transition-blur break-words;
      }

      p {
        @apply text-3xl break-words;
      }
    </style>
    <script is:inline>
      function setTheme() {
        const themeCandidates = [
          "theme--green",
          "theme--red",
          "theme--blue",
          "theme--purple",
        ];

        const theme =
          themeCandidates[Math.floor(Math.random() * themeCandidates.length)];
        localStorage.setItem("theme", theme);
      }

      function applyTheme() {
        const theme = localStorage.getItem("theme") || "theme--green"; // fallback to green theme for saftey
        const themeElement = document.querySelector(".theme");

        themeElement.classList.forEach((className) => {
          if (className.startsWith("theme--")) {
            themeElement.classList.remove(className);
          }
        });

        themeElement.classList.add(theme);
      }

      setTheme();
      applyTheme();

      document.addEventListener("astro:page-load", applyTheme);
      document.addEventListener("keydown", function (event) {
        if (event.key === "z") {
          event.preventDefault();
          setTheme();
          applyTheme();
        }
      });
    </script>
  </body>
</html>
